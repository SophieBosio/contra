adt Single = Ctr | Dtr Integer .

adt Recursive = C | D Recursive .

adt RecursiveMulti = A | B Integer RecursiveMulti .

adt List = Nil | Cons Integer List .

myList :: List .
myList = Cons { 1, Cons { 2, Cons { 3,  Nil } } } .

inferredList = Cons { 1, Cons { 2, Cons { 3,  Nil } } } .


-- Dead simple prop -- all that's required is that an ADT instance is *created*
please :: Single -> Boolean .
please x =*= True .
